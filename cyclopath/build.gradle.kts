/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    java
    `maven-publish`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://api.mapbox.com/downloads/v2/releases/maven/com/mapbox/mapboxsdk/mapbox-sdk-geojson/6.11.0/mapbox-sdk-geojson-6.11.0.jar")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web:3.0.5")
    implementation("org.springframework.boot:spring-boot-starter-webflux:3.0.5")
    implementation("com.microsoft.playwright:playwright:1.32.0")
    implementation("org.json:json:20220320")
    implementation("jakarta.annotation:jakarta.annotation-api:2.1.0")
    implementation("io.jenetics:jpx:3.0.1")
    implementation("org.hibernate.validator:hibernate-validator:8.0.0.Final")
    implementation("com.fasterxml.jackson.core:jackson-core:2.14.2")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.14.2")
    implementation("org.mapstruct:mapstruct:1.5.5.Final")
    implementation("org.springframework.boot:spring-boot-starter-security:3.0.5")
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    implementation("io.jsonwebtoken:jjwt-impl:0.11.5")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")
    implementation("com.amazonaws:aws-java-sdk-dynamodb:1.12.459")
    implementation("io.github.boostchicken:spring-data-dynamodb:5.2.5")
    testImplementation("org.springframework.boot:spring-boot-starter-test:3.0.5")
    testImplementation("io.projectreactor:reactor-test:3.5.4")
    testImplementation("org.springframework.boot:spring-boot-starter-json:3.0.5")
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.2")
    testImplementation("org.mockito:mockito-inline:5.2.0")
    compileOnly("org.projectlombok:lombok:1.18.26")
}

group = "com.bassemHalim"
version = "0.0.1-SNAPSHOT"
description = "cyclopath"
java.sourceCompatibility = JavaVersion.VERSION_16

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}
